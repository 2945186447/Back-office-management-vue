<template>
  <el-card class="box-card" shadow="hover">
    <el-row :gutter="20">
      <el-col :span="7">
   <el-input :clearable="true" @clear="GetUserList" v-model="queryInfo.query" placeholder="请输入内容">
    <el-button slot="append" icon="el-icon-search"  @click="GetUserList" clearable="true" ></el-button>
  </el-input>
      </el-col>
      <el-col :span="4" class="col2">
         <el-button type="primary"  @click="dialogVisibles">新增用户</el-button>
      </el-col>
     
    </el-row>
   <el-row width="100%" >
     <el-col :span="25">
        <el-table class="userlist"
      :data="userList"
      style="width: 100%"
      :stripe="true"
      >
      <el-table-column
        type="index"
        label="#"
        width="200">
      </el-table-column>
      <el-table-column
        prop="username"
        label="姓名"
        width="250">
      </el-table-column>
      <el-table-column
        prop="email"
        label="邮箱"
        width="250">
      </el-table-column>
      <el-table-column
        prop="mobile"
        label="电话"
        width="250">
      </el-table-column>
      <el-table-column
        prop="role_name"
        label="角色"
        width="250">
      </el-table-column>
      <el-table-column
        label="状态"
        width="250">
        <template slot-scope="scope">
          
              <el-switch @change="changeState(scope.row)"
        v-model="scope.row.mg_state"
       active-color="#13ce66"
       inactive-color="#ff4949">
</el-switch>
        </template>
      </el-table-column>
      <el-table-column
        prop="mobile"
        label="操作"
        width="220">
        <template slot-scope="scope">
        
   
       <el-button type="primary" icon="el-icon-edit"></el-button>
  
    <el-tooltip  effect="dark" content="分配角色" placement="top-end">
      <el-button :enterable="false"  type="warning" icon="el-icon-setting"></el-button> 
  </el-tooltip>
   
       <el-button type="danger" icon="el-icon-delete" @click="delectUser(scope.row.id)"></el-button>
    
       
          
          
        </template>
      </el-table-column>
    </el-table>
    
     </el-col>
   </el-row>
<!--  翻页器 -->
   <el-row>
     <el-col>
    <el-pagination
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
      :current-page="queryInfo.pagenum"
      :page-sizes="[1, 2, 5, 10]"
      :page-size="queryInfo.pagesize"
     
      :total="totals">
    </el-pagination>
     </el-col>
   </el-row>
  

    <CommonSetUser :setLabel="setLabel" :addUserMsgRules="addUserMsgRules"></CommonSetUser>

</el-card>


</template>

<script>

import CommonSetUser from '../../components/CommonSetUser.vue'
export default {
  components:{
    CommonSetUser
  },
  data() {
    return {
      //传递到弹出表单的信息
      setLabel:[
        {userMsg:'',label:"账号",prop:"username",rules:'usernameRules',rules:[ { required: true, message: '账号不能为空',trigger:'blur'},
        {min:4,max:10,message:"长度在3-10个字符",trigger:'blur'}]},
         {userMsg:'',label:"密码",prop:"password",rules:'passwordRules',rules:[ { required: true, message: '密码不能为空'},
          {min:6,max:15,message:"长度在6-15个字符",trigger:'blur'}]},
          {userMsg:'',label:"邮箱",prop:"eamil",rules:'eamilRules',rules:[{required:false},
          {
            validator: function(rule, value, callback) {
              if (
                /^\w{1,64}@[a-z0-9\-]{1,256}(\.[a-z]{2,6}){1,2}$/i.test(
                  value
                ) == false
              ) {
                callback(new Error("邮箱格式错误"));
              } else {
                callback();
              }
            },
            trigger: "blur"
          }]},
           {userMsg:'',label:"手机号",prop:"mobile",rules:'mobileeRules',rules:[ {required:false},
          {
            validator: function(rule, value, callback) {
              if (/^1[34578]\d{9}$/.test(value) == false) {
                callback(new Error("手机号格式错误"));
              } else {
                callback();
              }
            },
            trigger: "blur"
          }]}
        
      ],
      //添加用户表单的信息
     /*  addUserMsg:{
        username:'',
        password:'',
        email:'',
        mobile:''

      }, */
      //添加用户表单规则验证
      addUserMsgRules:{
        usernameRules:[
          { required: true, message: '账号不能为空',trigger:'blur'},
        {min:4,max:10,message:"长度在3-10个字符",trigger:'blur'}
        ],
        passwordRules:[
           { required: true, message: '密码不能为空'},
          {min:6,max:15,message:"长度在6-15个字符",trigger:'blur'}
        ],
        emailRules:[
          {required:false},
          {
            validator: function(rule, value, callback) {
              if (
                /^\w{1,64}@[a-z0-9\-]{1,256}(\.[a-z]{2,6}){1,2}$/i.test(
                  value
                ) == false
              ) {
                callback(new Error("邮箱格式错误"));
              } else {
                callback();
              }
            },
            trigger: "blur"
          },
          
        ],
        mobileRules:[
            {required:false},
          {
            validator: function(rule, value, callback) {
              if (/^1[34578]\d{9}$/.test(value) == false) {
                callback(new Error("手机号格式错误"));
              } else {
                callback();
              }
            },
            trigger: "blur"
          }
        ]
        

      },
      //修改用户弹窗是否显示
      dialogVisible:false,
      //获取用户列表参数对象
      queryInfo:{
        query:'',
        pagenum:1,
        //当前每页显示多少条数据
        pagesize:7
      },
 //用户列表
      userList:[],
      //总人数
      totals:[],
      userID:''
      
    };
  },
  mounted () {
      this.GetUserList()
  },

  methods:{
    //get请求列表
    GetUserList(){
      this.$http.get('users',{params:this.queryInfo}).then(
        ({data:res}) =>{
         
          if(res.meta.status === 200){
            
               this.userList=res.data.users
              this.totals=  res.data.total
             

              this.$message({
          message: '获取用户列表成功',
          type: 'success'
        });
          }
          else{
           this.$message({
          message: '获取用户列表失败',
          type: 'error'
        });
          }
        }
      )
    },
//分页器 监听pagesize改变的事件
 handleSizeChange(val) {
        console.log(`每页 ${val} 条`);
        this.queryInfo.pagesize = val
        this.GetUserList()
      },
      //监听 页码值改变的事件
      handleCurrentChange(val) {
        console.log(`当前页: ${val}`);
         this.queryInfo.pagenum = val
        this.GetUserList()
      },

 //改变switch 用户mg_state状态
  changeState(val){   
     this.$http.put(`users/${val.id}/state/${val.mg_state}`).then(
       ({data:res}) =>{
         if(res.meta.status !== 200){
            val.mg_state = !val.mg_state
         }
       }
     )
    

  },

 // 添加用户dialog上的按钮
  /*  handleClose(done) {
        this.$confirm('确认关闭？')
          .then(_ => {
            this.dialogVisible = false
            this.$refs.addUserMsg.resetFields()
           
          })
          .catch(_ => {});
      }, */

     

//添加用户确定后发起添加用户请求

/* addUser(){
 console.log(this.addUserMsg)
 //验证表单规则
 this.$refs.addUserMsg.validate(value =>{
   console.log(value)
   if(!value) return
this.$http.post('users',this.addUserMsg).then(
   ({data:res}) =>{
     console.log(res)
     if(res.meta.status === 201){
        this.$message({
          message: '添加成功',
          type: 'success',
          
        });
         this.GetUserList()
        this.$refs.addUserMsg.resetFields()
     }
     else{
       this.$message({
          message: '添加失败',
          type: 'error'
        });
     }
   }
 )
 })
 

}, */
//添加用户列表点击显示
dialogVisibles(){
  this.$store.state.dialogVisible = !this.$store.state.dialogVisibl
},

//删除用户
delectUser(val){
   this.$confirm("确定删除用户吗?").then(
             res =>{
                this.$http.delete(`users/${val}`).then(
    ({data:res}) =>{
    if(res.meta.status === 200){
        this.$message({
          message: '删除成功',
          type: 'success'
        });
        this.GetUserList()
       
     }
    }
  )
             },
             red =>{
               
             }
           )
  
}

    
 
 
  },
 

}
</script>

<style scoped>
  .text {
    font-size: 14px;
  }

  .item {
    padding: 18px 0;
  }

  .box-card {
    width: 100%;
    margin-top: 20px;
  }
  .col2{
   
    margin-top: -10px;
  }
  .userlist{
    margin-top: 20px;
    border: 1px solid whitesmoke;
  }
 
</style>



























 <el-table
    :data="tableData"
    style="width: 100%">
    <el-table-column
      label="#"
      prop="#"
      type="index"
      width="100"
      >
    </el-table-column>
    <el-table-column
      label="分类名称"
      prop="cat_name">
    </el-table-column>
    <el-table-column
      label="是否有效"
      prop="cat_pid">
      <template slot-scope="scope">
           <i v-show="scope.row.cat_pid ===0" class="el-icon-success"></i>
    </template>
    

    </el-table-column>
     <el-table-column
      label="排序"
      prop="cat_level">

      <template slot-scope="scope">
          
          <el-tag v-show="scope.row.cat_level === 0">一级</el-tag>
          <el-tag type="success" v-show="scope.row.cat_level === 1">二级</el-tag>
          <el-tag type="warning" v-show="scope.row.cat_level === 2">三级</el-tag>
      </template>
    </el-table-column>
     <el-table-column
      label="操作"
      prop="desc">

       <template slot-scope="scope">
          <el-row :gutter="25">
              <el-col :span="25">
                   <el-button icon="el-icon-edit" type="primary">编辑</el-button>
                 
                    <el-button icon="el-icon-delete"  type="danger">删除</el-button>
              </el-col>
          </el-row>
      </template>


    </el-table-column>
  </el-table>